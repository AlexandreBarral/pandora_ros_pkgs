#! /usr/bin/env python
import rospy
from nav_msgs.msg import OccupancyGrid
from tf.transformations import quaternion_from_euler

def talker():
  pub = rospy.Publisher('/data_fusion/soft_obstacles_patch', OccupancyGrid)
  rospy.init_node('mock_soft_patcher')
  rate = rospy.Rate(1)  # 10 Hz

  # se rads
  quat = quaternion_from_euler(0, 0, 0) # (roll, pitch, yaw)
  rospy.loginfo(quat)
  # Msg creation
  # TODO Assure that slam doesnt clear the patch
  map_update_msg = OccupancyGrid()
  #
  map_update_msg.header.frame_id = '/map'
  map_update_msg.info.resolution = 0.02
  
  map_update_msg.info.origin.position.x = -7.0
  map_update_msg.info.origin.position.y = -7.0
  map_update_msg.info.origin.position.z = 0.0

  map_update_msg.info.origin.orientation.x = quat[0]
  map_update_msg.info.origin.orientation.y = quat[1]
  map_update_msg.info.origin.orientation.z = quat[2]
  map_update_msg.info.origin.orientation.w = quat[3]

  map_update_msg.info.width = 700
  map_update_msg.info.height = 700

  temp_array = [0] * map_update_msg.info.width * map_update_msg.info.height
  map_update_msg.data = temp_array
  
  while not rospy.is_shutdown():
    map_update_msg.header.stamp = rospy.Time.now()
    rospy.loginfo(map_update_msg)
    pub.publish(map_update_msg)
    rate.sleep()

if __name__ == '__main__':
  try:
    talker()
  except rospy.ROSInterruptException:
    pass
